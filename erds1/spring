spring io platform
spring boot
spring framework*
spring cloud data flow
spring cloud
spring data*
spring integration*
spring batch*
spring security*
spring hateoas
spring social
spring amqp
spring mobile*
spring for android*
spring web flow
spring web services
spring ldap
spring session
spring shell
spring xd
spring flo
spring kafka
spring roo*
spring scala
spring blazeds integration
spring loaded
rest shell
根本使命：简化java开发
	a、基于POJO的轻量级和最小侵入性编程
	b、通过依赖注入和面向接口实现松耦合
	c、基于切面和惯例进行声明式编程
	d、通过切面和模板减少样板式代码
spring 实战
1、spring框架的核心知识
	a、spring容器（管理着spring应用中bean的创建、配置、管理）
		1、beanFactory
		2、应用上下文
		3、bean的作用域：单例(Singleton)、原型(Prototype)、会话(Session)、请求(Request)
	b、依赖注入（松耦合:应用对象之间的解耦）
		1、构造器注入
		2、应用上下文（ClassPathXmlApplicationContext）
		3、spring装配bean的三种方式：自动化配置、基于java的显式配置、基于XML的显式配置
		4、SpEL表达式(动态注入值到spring bean)
	c、面向切面编程（松耦合:横切关注点与它所影响的对象之间的解耦）
		1、一个切面包括：切入点（切点表达式AspectJ）、通知（五种）、连接点
		2、应用场景：日志、事务、安全、缓存
		3、重用通用功能（切面取代了继承和委托）
		4、Spring AOP和AspectJ
	d、模板封装
		1、JdbcTemplate
2、如何使用spring构建Web应用程序
	a、spring MVC
	b、spring web flow
	c、spring security
3、如何在应用程序的后端使用spring
	a、spring对JDBC
	b、spring对JPA
	c、spring对非关系型数据库
	d、spring对声明式缓存的支持
	e、如何通过AOP将springSecurity应用到方法级别
4、如何使用spring与其他的应用和服务进行集成
	a、如何创建于使用远程服务
	b、如何创建RESTful服务
	c、spring对异步消息的支持（JMS、AMQP）
	d、如何将spring与WebSocket和STOMP结合
	e、使用spring发送E-mail
	f、spring对JMX的支持（监控和修改运行时配置）
	g、spring boot